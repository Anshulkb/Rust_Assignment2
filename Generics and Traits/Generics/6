
struct Point<T, U> {
    x: T,
    y: U,
}

impl<T, U> Point<T, U> {
    // Implement mixup to make it work, DON'T modify other code.
    
    // Here self is used to point original data and temp is for argument passed
    // for return type, the Point will have original value of 'x' and new value of 'y'
    
    fn mixup<X,Y>(self, temp:Point<X,Y>)-> Point<T,Y>{
        Point{
            x:self.x,
            y:temp.y
        }

    }
}

fn main() {
    let p1 = Point { x: 5, y: 10 };
    let p2 = Point { x: "Hello", y: '中'};

    let p3 = p1.mixup(p2);

    assert_eq!(p3.x, 5);
    assert_eq!(p3.y, '中');

    println!("Success!");
}
